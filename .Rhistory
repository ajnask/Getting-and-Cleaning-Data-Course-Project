install.packages("MASS")
install.packages("ISLR")
cls
clear
head(mtcars)
mtcars
library [MASS]
names[Boston]
names(Boston)
library(MASS)
names(Boston)
library(ISLR)
names(Boston)
?plot
plot(medv~lstat,Boston)
fit1=lm(medv~lstat,data=Boston)
fit1
plot(medv~lstat,Boston)
summary(fit1)
abline(fit1,col="red")
fit2=lm(medv~lstat+age,data=Boston)
summary(fit2)
fit3=lm(medv~.,data=Boston)
summary(fit3)
abline(fit3,"blue")
confint(fit1)
predict(fit1,data.frame(lstat=c(5,10,15),interval="confidence")
predict(fit1,data.frame(lstat=c(5,10,15),interval="confidence")
predict(fit1,data.frame(lstat=c(5,10,15),interval="confidence"))
predict(fit1,data.frame(lstat=c(5,10,15)),interval="confidence")
confint(fit3)
attach(Boston)
par(mfrow=c(1,1))
fit6=lm(medv~lstat^2,data=Boston)
fit7=lm(medv~lstat^4,data=Boston)
attach(Boston)
par(mfrwo=c(1,1))
fix(Carseats)
names(Carseats)
summary(Carseats)
fix(Carseats)
fit1=lm(Sales~.Income:Advertising+Age:Price,Carseats)
fit1=lm(Sales~.+Income:Advertising+Age:Price,Carseats)
summary(fit1)
contrasts(Carseats$ShelveLoc)
library(psych)
install.packages(c("car", "caret"))
install.packages("swirl")
library(swirl)
swirl()
library(swirl)
swirl()
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lappy(flags, class)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
cls_vect <- sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flag[,11:17]
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[,19:23]
range(flag_shapes)
head(flag_shapes)
lapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lappy(flags,unique)
unique_vals <- lapply(flags,unique)
unique_vals
lapply(unique_vals,length)
sapply(unique_vals,length)
sapply(a)
sapply(flags,unique)
lapply(unique_vals,function(elem) elem[2])
sapply(flags,unique)
vapply(flags,unique, numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red, summary)
tapply(flags$population,flags$landmass,summary)
iris
mean(iris$Sepal.Length)
head(iris)
apply(iris,mean)
apply(iris,mean,1)
apply(iris[,1:4],mean)
apply(iris[,1:4],1,mean)
rowMeans(iris[,1:4])
colMeans(iris)
apply(iris[,1:4],2,mean)
tapply(mtcars$mpg,mtcars$cyl)
tapply(mtcars$mpg,mtcars$cyl,mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
with(mtcars, tapply(mpg, cyl, mean))
mean(mtcars$mpg, mtcars$cyl)
head(mtcars)
tapply(mtcars$hp,mtcars$cyl,summary)
82.64-209.2
?debug
mean(iris$Sepal.Length)
tapply(iris$Sepal.Length,iris$Species,mean)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
head(sampleTimes)
library(lubridate)
sampleTimes2 <- ymd(sampleTimes)
sampleTimes2
class(sampleTimes2)
subset(sampleTimes2,%y == 2012)
sampleTimes2[2012]
sampleTimes2[2012,]
?`lubridate-package`
strptime(sampleTimes2,format = "%Y-%m-%d")
strptime(sampleTimes2,format = "%Y")
strptime(sampleTimes2,format = "%Y-%m-%d")[%Y]
subset(sampleTimes2,format.Date(sampleTimes2,%Y)=="2014")
subset(sampleTimes2,format.Date(sampleTimes2,"%Y")=="2014")
subset(sampleTimes2,(sampleTimes2,"%Y")=="2014")
sampleTimes2["%Y"]
sampleTimes2["%Y",]
sampleTimes2["%y"]
subset(sampleTimes2,as.Date(sampleTimes2,"%Y")=="2014")
subset(sampleTimes2,format.Date(sampleTimes2,"%Y")=="2014")
twentryforteen <- subset(sampleTimes2,format.Date(sampleTimes2,"%Y")=="2014")
nrow(twentryforteen)
length(twentryforteen)
twentryforteen <- subset(sampleTimes2,format.Date(sampleTimes2,"%Y")=="2012")
length(twentryforteen)
twentrytwelve <- subset(sampleTimes2,format.Date(sampleTimes2,"%Y")=="2012")
length(twentrytwelve)
mondays <- subset(twentrytwelve,format.Date(twentrytwelve,"%a")=="MON")
mondays
twentytwelve <- subset(sampleTimes2,format.Date(sampleTimes2,"%Y")=="2012")
length(twentytwelve)
twentytwelve
class(twentytwelve)
-rm("twentrytwelve")
rm("twentrytwelve")
rm("twentryforteen")
wday(twentytwelve)
wday(twentytwelve,label = TRUE)
table(wday(twentytwelve,label = TRUE))
swirl()
library(swirl)
swirl(0)
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
today()
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day,label = TRUE)
now()
this_moment <- now()
this_moment
hour(this_moment)
my_date <-ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 may 17")
ymd("1989 May 17")
ymd("1989 May 17h")
ymd("1989 May 17th")
mdy("March 12, 1975")
mdy("25081985")
mdy(25081985)
dmy("25081985")
dmy(25081985)
ymd("192012")
ymd("1/9/2012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms(:03:22:14)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment,hours = 20,minutes = 06)
this_moment
now()
now("America/New_York")
nyc <- now("America/New_York")
nyc
nyc + days(2)
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
arrive
?with_tz
with_tz(time = arrive,tzone = "Asia/Hong_Kong")
arrive <- with_tz(time = arrive,tzone = "Asia/Hong_Kong")
arrive
mdy("June 17, 2008",tz="Singapore")
last_time <- mdy("June 17, 2008",tz="Singapore")
last_time
?interval
how_long <- interval(last_time,arrive)
as.period(how_long)
stopwatch()
twentytwelve1 <- subset(sampleTimes2,year == "2012")
twentytwelve1 <- subset(sampleTimes2,year(sampleTimes2) == "2012")
length(twentytwelve1)
getwd()
setwd("H:/Data Science/Specialization/Getting Data")
getwd
getwd()
setwd("H:/Data Science/Specialization/Getting Data/Getting-and-Cleaning-Data-Course-Project/")
read.table("X_train.txt")
X_train <- read.table("X_train.txt")
dim(X_train)
X_test <- read.table("X_test.txt")
y_train <- read.table("y_train.txt")
y_test <- read.table("y_test.txt")
dim(y_test)
dim(y_train)
subject_train <- read.table("subject_train.txt")
subject_test <- read.table("subject_test.txt")
dim(subject_train)
cbind(subject_train,X_train,y_train)
DF <- cbind(subject_train,X_train,y_train)
dim(DF)
View(DF)
View(subject_test)
View(subject_train)
View(subject_test)
DF <- rbind(DF,cbind(subject_test,X_test,y_test))
dim(DF)
View(y_train)
features <- read.table("features.txt")
dim(features)
View(features)
View(y_train)
table(DF$V561)
setwd("H:/Data Science/Specialization/Getting Data/Getting-and-Cleaning-Data-Course-Project/")
read.table("X_train.txt")
X_train <- read.table("X_train.txt")
X_test <- read.table("X_test.txt")
y_train <- read.table("y_train.txt")
y_test <- read.table("y_test.txt")
subject_train <- read.table("subject_train.txt")
subject_test <- read.table("subject_test.txt")
DF <- cbind(subject_train,X_train,y_train)
DF <- rbind(DF,cbind(subject_test,X_test,y_test))
dim(DF)
DF <- cbind(subject_train,X_train,y_train)
dim(DF)
DF[,563]
name(DF[,563])
colname(DF[,563])
colnames(DF)[563]
colnames(DF)[561]
colnames(DF)[562]
colnames(DF)
DF <- cbind(Subject = subject_train,X_train,y_train)
colnames(DF)
DF <- cbind(Subject = subject_train,X_train,y_train)
colnames(DF)
View(DF)
DF <- cbind(subject_train,X_train,y_train)
DF <- rbind(DF,cbind(subject_test,X_test,y_test))
dim(DF)
colnames(DF)[1]
colnames(DF)[1] <- "Subject_ID"
View(DF)
colnames(DF)[563]
colnames(DF)[563] <- "Activities"
table(DF$Activities)
features <- read.table("features.txt")
View(features)
class(DF$Activities)
activities <- read.table("activity_labels.txt")
activities
activities <- read.table("activity_labels.txt",row.names = NULL)
activities
table(DF$Activities)
DF$Activities <- factor(DF$Activities)
class(DF$Activities)
levels(DF$Activities)
levels(DF$Activities) <- activites[,2]
levels(DF$Activities) <- activities[,2]
levels(DF$Activities)
features
colnames(DF)[2:562] <- features[,2]
colnames(DF)
features[,2]
class(features)
class(features$V2)
features <- read.table("features.txt",colClasses = "character")
DF <- cbind(subject_train,X_train,y_train)
DF <- rbind(DF,cbind(subject_test,X_test,y_test))
colnames(DF)[1] <- "Subject_ID"
colnames(DF)[563] <- "Activities"
class(features$V2)
colnames(DF)[2:562] <- features[,2]
DF$Activities <- factor(DF$Activities)
levels(DF$Activities) <- activities[,2]
table(DF$Activities)
grep(x = colnames(DF),pattern = "mean|std")
grep(x = colnames(DF),pattern = "[Mm]ean|std")
grep(x = colnames(DF),pattern = "[Mm]ean|std")
newDF <- DF[,grep(x = colnames(DF),pattern = "[Mm]ean|std")]
View(newDF)
